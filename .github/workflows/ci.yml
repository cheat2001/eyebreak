name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build and Test
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_15.0.app/Contents/Developer
      
    - name: Show Xcode version
      run: xcodebuild -version
      
    - name: Build
      run: |
        xcodebuild clean build \
          -project EyeBreak.xcodeproj \
          -scheme EyeBreak \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          | xcpretty && exit ${PIPESTATUS[0]}
      
    - name: Run tests (if any)
      run: |
        xcodebuild test \
          -project EyeBreak.xcodeproj \
          -scheme EyeBreak \
          -destination 'platform=macOS' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          | xcpretty && exit ${PIPESTATUS[0]} || echo "No tests configured yet"
      continue-on-error: true
      
    - name: Check for warnings
      run: |
        xcodebuild clean build \
          -project EyeBreak.xcodeproj \
          -scheme EyeBreak \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          | grep -A 5 "warning:" || echo "No warnings found! ðŸŽ‰"
      continue-on-error: true

  lint:
    name: SwiftLint
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install SwiftLint
      run: brew install swiftlint
      
    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging
      continue-on-error: true

  code-quality:
    name: Code Quality Checks
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check for TODO/FIXME
      run: |
        echo "Checking for TODO/FIXME comments..."
        grep -r "TODO\|FIXME" EyeBreak/ || echo "No TODO/FIXME found"
      continue-on-error: true
      
    - name: Check file permissions
      run: |
        find . -name "*.sh" -type f -exec test -x {} \; -exec echo "âœ“ {}" \; || echo "Some shell scripts are not executable"
